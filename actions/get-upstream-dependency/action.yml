name: 'Get Upstream Dependency'
description: |
  Gets upstream dependency version metadata

inputs:
  github-token:
    description: github access token
    required: false
  name:
    description: dependency name
    required: true
  version:
    description: dependency version
    required: true

outputs:
  uri:
    description: URI of upstream dependency
    value: ${{ steps.upstream-dependency.outputs.uri }}
  sha256:
    description: SHA256 of upstream dependency
    value: ${{ steps.upstream-dependency.outputs.sha256 }}
  release-date:
    description: Release date of upstream dependency
    value: ${{ steps.upstream-dependency.outputs.release-date }}
  deprecation-date:
    description: Deprecation date of upstream dependency
    value: ${{ steps.upstream-dependency.outputs.deprecation-date }}
  cpe:
    description: NVD identifier
    value: ${{ steps.upstream-dependency.outputs.cpe }}
  purl:
    description: Package URL
    value: ${{ steps.upstream-dependency.outputs.purl }}
  licenses:
    description: Dependency licenses
    value: ${{ steps.upstream-dependency.outputs.licenses }}

runs:
  using: 'composite'
  steps:
    - id: upstream-dependency
      shell: bash
      run: |
        #!/usr/bin/env bash
        set -euo pipefail

        cd "${{ github.action_path }}/entrypoint"

        go build -o ./entrypoint

        metadata="$(./entrypoint \
          --github-token "${{ inputs.github-token }}" \
          --name "${{ inputs.name }}" \
          --version "${{ inputs.version }}"
        )"

        echo "::set-output name=uri::$(jq -r .uri <<< "${metadata}")"
        echo "::set-output name=sha256::$(jq -r .sha256 <<< "${metadata}")"
        echo "::set-output name=release-date::$(jq -r '.release_date // empty' <<< "${metadata}")"
        echo "::set-output name=deprecation-date::$(jq -r '.deprecation_date // empty' <<< "${metadata}")"
        echo "::set-output name=cpe::$(jq -r .cpe <<< "${metadata}")"
        echo "::set-output name=purl::$(jq -r .purl <<< "${metadata}")"
        echo "::set-output name=licenses::$(jq -c .licenses <<< "${metadata}")"

        rm -f ./entrypoint

name: 'Upload Dependency Metadata'
description: |
  Upload dependency metadata to AWS s3

inputs:
  bucket-name:
    description: AWS s3 bucket
    required: true
  dependency-name:
    description: Dependency name
    required: true
  version:
    description: Dependency version
    required: true
  sha256:
    description: Compiled dependency sha256
    required: true
  uri:
    description: Compiled dependency uri
    required: true
  stacks:
    description: Compatible stacks
    required: true
  source-uri:
    description: Source dependency uri
    required: true
  source-sha256:
    description: Source dependency sha256
    required: true
  deprecation-date:
    description: Deprecation date
    required: true
  cpe:
    description: NVD identifier in CPE 2.3 notation
    required: true
  purl:
    description: Package URL
    required: true
  licenses:
    description: Source dependency licenses
    required: true

runs:
  using: 'composite'
  steps:
    - id: upload
      shell: bash
      run: |
        set -euo pipefail

        filename="$(echo '${{ inputs.dependency-name }}' | awk '{print tolower($0)}')"
        aws s3 cp "s3://${{ inputs.bucket-name }}/metadata/${filename}.json" metadata.json

        now="$(date '+%FT%T%:z')"

        created_at=
        original_created_at="$(jq \
          --arg version "${{ inputs.version }}" \
          -r '.[] | select(.version == $version) | .created_at // ""' metadata.json)"

        if [[ -n "${original_created_at}" ]]; then
          created_at="${original_created_at}"
        else
          created_at="${now}"
        fi

        cpe="$(echo '${{ inputs.cpe }}' | sed 's|\\|\\\\|g')"

        licenses="$(echo '${{ inputs.licenses }}' | jq -Rc 'split(",")')"

        metadata="$(cat << EOF
        {
          "name": "${{ inputs.dependency-name }}",
          "version": "${{ inputs.version }}",
          "sha256": "${{ inputs.sha256 }}",
          "uri": "${{ inputs.uri }}",
          "stacks": ${{ inputs.stacks }},
          "source": "${{ inputs.source-uri }}",
          "source_sha256": "${{ inputs.source-sha256 }}",
          "deprecation_date": "${{ inputs.deprecation-date }}",
          "created_at": "${created_at}",
          "modified_at": "${now}",
          "cpe": "${cpe}",
          "purl": "${purl}",
          "licenses": ${licenses}
        }
        EOF
        )"

        updated_metadata="$(jq \
          --argjson metadata "${metadata}" \
          --arg version "${{ inputs.version }}" \
          -r 'del(.[] | select(.version == $version)) | [$metadata] + .' metadata.json)"

        echo "${updated_metadata}" > metadata.json

        aws s3 cp metadata.json "s3://${{ inputs.bucket-name }}/metadata/${filename}.json"

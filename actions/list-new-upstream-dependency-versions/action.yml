name: 'List New Upstream Dependency Versions'
description: |
  List new versions of upstream dependency

inputs:
  github-token:
    description: github access token
    required: false
  name:
    description: dependency name
    required: true
  known-versions:
    description: JSON array of known versions
    required: true

outputs:
  new-versions:
    description: JSON array of new versions
    value: ${{ steps.new-versions.outputs.new-versions }}
  upstream-versions:
    description: JSON array of upstream versions
    value: ${{ steps.new-versions.outputs.upstream-versions }}

runs:
  using: 'composite'
  steps:

    - id: new-versions
      shell: bash
      run: |
        #!/usr/bin/env bash
        set -euo pipefail

        cd "${{ github.action_path }}/entrypoint"

        go build -o ./entrypoint

        upstream_versions="$(./entrypoint \
          --github-token "${{ inputs.github-token }}" \
          --name "${{ inputs.name }}"
        )"

        new_versions="$(jq -n --argjson upstream_versions "${upstream_versions}" \
          --argjson known_versions '${{ inputs.known-versions }}' '$upstream_versions-$known_versions')"

        delimiter=$(openssl rand -hex 16) # roughly the same entropy as uuid v4 used in https://github.com/actions/toolkit/blob/b36e70495fbee083eb20f600eafa9091d832577d/packages/core/src/file-command.ts#L28
        printf "upstream-versions<<%s\n%s\n%s\n" "${delimiter}" "${upstream_versions}" "${delimiter}" >> "${GITHUB_OUTPUT}" # see https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        printf "new-versions<<%s\n%s\n%s\n" "${delimiter}" "${new_versions}" "${delimiter}" >> "${GITHUB_OUTPUT}" # see https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings

        rm -f ./entrypoint

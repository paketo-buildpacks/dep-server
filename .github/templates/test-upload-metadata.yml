#@ load("@ytt:data", "data")
name: #@ data.values.name.capitalize() + " Test and Upload Metadata"

#! "on" must be in quotes because it is a truthy in ytt
"on":
  workflow_dispatch:
    inputs:
      VERSION:
        required: true
      URI:
        required: true
      SHA256:
        required: true
      SOURCE_URI:
        required: true
      SOURCE_SHA256:
        required: true
      DEPRECATION_DATE:
        required: true
      CPE:
        required: true
  repository_dispatch:
    types: #@ [ data.values.name + "-test" ]

env:
  DEP_NAME: #@ data.values.name
  #@ if data.values.required_dependency != '':
  REQUIRED_DEP: #@ data.values.required_dependency
  #@ end
  VERSION: ${{ github.event.client_payload.version }}
  URI: ${{ github.event.client_payload.uri }}
  SHA256: ${{ github.event.client_payload.sha256 }}
  SOURCE_URI: ${{ github.event.client_payload.source_uri }}
  SOURCE_SHA256: ${{ github.event.client_payload.source_sha256 }}
  DEPRECATION_DATE: ${{ github.event.client_payload.deprecation_date }}
  CPE: ${{ github.event.client_payload.cpe }}

jobs:
  test-upload-metadata:
    name: Test Dependency and Upload Metadata
    runs-on: ubuntu-18.04

    steps:
    - name: Set Env Vars
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "URI=${{ github.event.inputs.uri }}" >> $GITHUB_ENV
          echo "SHA256=${{ github.event.inputs.sha256 }}" >> $GITHUB_ENV
          echo "SOURCE_URI=${{ github.event.inputs.source_uri }}" >> $GITHUB_ENV
          echo "SOURCE_SHA256=${{ github.event.inputs.source_sha256 }}" >> $GITHUB_ENV
          echo "DEPRECATION_DATE=${{ github.event.inputs.deprecation_date }}" >> $GITHUB_ENV
          echo "CPE=${{ github.event.inputs.cpe }}" >> $GITHUB_ENV
        fi

  #@ if data.values.skip_test != 'true':
    #@ if data.values.required_dependency != '':
    - name: Get required dependency
      id: required-dependency
      run: |
        uri="$(curl -sL "https://api.deps.paketo.io/v1/dependency?name=${{ env.REQUIRED_DEP }}" | jq -r '. |= sort_by(.version) | reverse[0].uri')"
        echo "::set-output name=uri::${uri}"
    #@ end

    - name: Test
      uses: paketo-buildpacks/dep-server/actions/test-dependency@main
      with:
        name: "${{ env.DEP_NAME }}"
        version: "${{ env.VERSION }}"
        dependency_url: "${{ env.URI }}"
        #@ if data.values.mixins != '':
        mixins: #@ data.values.mixins
        #@ end
        #@ if data.values.required_dependency != '':
        required_dependency: '${{ steps.required-dependency.outputs.uri }}'
        #@ end
  #@ end

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Upload dependency metadata
      uses: paketo-buildpacks/dep-server/actions/upload-metadata@main
      with:
        bucket-name: "${{ secrets.DEPS_BUCKET }}"
        dependency-name: "${{ env.DEP_NAME }}"
        version: "${{ env.VERSION }}"
        sha256: "${{ env.SHA256 }}"
        uri: "${{ env.URI }}"
        stacks: #@ data.values.stacks
        source-uri: "${{ env.SOURCE_URI }}"
        source-sha256: "${{ env.SOURCE_SHA256 }}"
        deprecation-date: "${{ env.DEPRECATION_DATE }}"
        cpe: "${{ env.CPE }}"

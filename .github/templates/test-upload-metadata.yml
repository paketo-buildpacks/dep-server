#@ load("@ytt:data", "data")
name: #@ data.values.name.capitalize() + " Test and Upload Metadata"

#! "on" must be in quotes because it is a truthy in ytt
"on":
  repository_dispatch:
    types: #@ [ data.values.name + "-test" ]

env:
  DEP_NAME: #@ data.values.name
  #@ if data.values.required_dependency != '':
  REQUIRED_DEP: #@ data.values.required_dependency
  #@ end

jobs:
  test-upload-metadata:
    name: Test Dependency and Upload Metadata
    runs-on: ubuntu-18.04

    steps:
  #@ if data.values.skip_test != 'true':
    #@ if data.values.required_dependency != '':
    - name: Get required dependency
      id: required-dependency
      run: |
        uri="$(curl -sL "https://api.deps.paketo.io/v1/dependency?name=${{ env.REQUIRED_DEP }}" | jq -r '. |= sort_by(.version) | reverse[0].uri')"
        echo "::set-output name=uri::${uri}"
    #@ end

    - name: Test
      uses: paketo-buildpacks/dep-server/actions/test-dependency@main
      with:
        name: "${{ env.DEP_NAME }}"
        version: "${{ github.event.client_payload.version }}"
        dependency_url: "${{ github.event.client_payload.uri }}"
        #@ if data.values.mixins != '':
        mixins: #@ data.values.mixins
        #@ end
        #@ if data.values.required_dependency != '':
        required_dependency: '${{ steps.required-dependency.outputs.uri }}'
        #@ end
  #@ end

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Modify CPE for Upload
      id: modify-cpe
      run: |
        cpe="$(echo '${{ github.event.client_payload.cpe }}' | sed 's|\\|\\\\|g')"
        echo "::set-output name=cpe::${cpe}"

    - name: Upload dependency metadata
      uses: paketo-buildpacks/dep-server/actions/upload-metadata@main
      with:
        bucket-name: "${{ secrets.DEPS_BUCKET }}"
        dependency-name: "${{ env.DEP_NAME }}"
        version: "${{ github.event.client_payload.version }}"
        sha256: "${{ github.event.client_payload.sha256 }}"
        uri: "${{ github.event.client_payload.uri }}"
        stacks: #@ data.values.stacks
        source-uri: "${{ github.event.client_payload.source_uri }}"
        source-sha256: "${{ github.event.client_payload.source_sha256 }}"
        deprecation-date: "${{ github.event.client_payload.deprecation_date }}"
        cpe: "${{ steps.modify-cpe.outputs.cpe }}"
        purl: "${{ github.event.client_payload.purl }}"
        licenses: "${{ github.event.client_payload.licenses }}"
